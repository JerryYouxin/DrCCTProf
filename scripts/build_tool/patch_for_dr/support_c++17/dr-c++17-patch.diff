diff --git a/CMakeLists.txt b/CMakeLists.txt
index 99d70d0c..12d3ce7b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -760,7 +760,11 @@ set(BASE_CONLY_FLAGS "")
 set(BASE_CXXONLY_FLAGS "")
 CHECK_CXX_COMPILER_FLAG("-std=c++17" cxx17_available)
 if (UNIX)
-  set(BASE_CXXONLY_FLAGS "${BASE_CXXONLY_FLAGS} -std=c++11")
+  if (cxx17_available)
+    set(BASE_CXXONLY_FLAGS "${BASE_CXXONLY_FLAGS} -std=c++17")
+  else()
+    set(BASE_CXXONLY_FLAGS "${BASE_CXXONLY_FLAGS} -std=c++11")
+  endif()
   # -std=c99 doesn't quite work
   # FIXME case 191480: we used to pass -pedantic just to cpp;
   # now w/ no separate cpp step we should eliminate the
diff --git a/clients/drcachesim/CMakeLists.txt b/clients/drcachesim/CMakeLists.txt
index 98f29bbe..9be73fc3 100644
--- a/clients/drcachesim/CMakeLists.txt
+++ b/clients/drcachesim/CMakeLists.txt
@@ -366,7 +366,11 @@ macro(add_win32_flags target)
     # with C++11-isms.
     get_property(cur TARGET ${target} PROPERTY COMPILE_FLAGS)
     if (NOT cur MATCHES "-std=")
-      append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++11")
+      if (cxx17_available)
+        append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++17")
+      else()
+        append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++11")
+      endif()
     endif ()
     if (DEBUG AND NOT cur MATCHES "-g")
       # We can't use restore_nonclient_flags() for clients, so we manually re-add debug
diff --git a/make/DynamoRIOConfig.cmake.in b/make/DynamoRIOConfig.cmake.in
index 9e9c8ed7..2873a887 100755
--- a/make/DynamoRIOConfig.cmake.in
+++ b/make/DynamoRIOConfig.cmake.in
@@ -1220,7 +1220,11 @@ function (use_DynamoRIO_extension target extname)
 
   if ("${extname}" MATCHES "^droption$")
     if (NOT WIN32)
-      _DR_append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++11")
+      if (cxx17_available)
+        _DR_append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++17")
+      else()
+        _DR_append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++11")
+      endif()
     endif ()
   endif ()
 endfunction (use_DynamoRIO_extension)
@@ -1264,7 +1268,11 @@ function (use_DynamoRIO_drmemtrace target)
     endif ()
   endif ()
   if (NOT WIN32)
-    _DR_append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++11")
+      if (cxx17_available)
+        _DR_append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++17")
+      else()
+        _DR_append_property_string(TARGET ${target} COMPILE_FLAGS "-std=c++11")
+      endif()
   endif ()
 endfunction ()
 
diff --git a/suite/tests/CMakeLists.txt b/suite/tests/CMakeLists.txt
index a59582f4..ce5abb30 100644
--- a/suite/tests/CMakeLists.txt
+++ b/suite/tests/CMakeLists.txt
@@ -421,8 +421,13 @@ function (set_cflags source)
   if ("${source}" MATCHES ".cpp$")
     # Our C files need -std=gnu99, but that's an invalid flag for C++.
     # configure_DynamoRIO_global removes unfavorable options for clients,
-    # re-adding -std=c++11.
-    string(REGEX REPLACE "-std=gnu99" "-std=c++11" cflags "${cflags}")
+    if (cxx17_available)
+      # re-adding -std=c++17.
+      string(REGEX REPLACE "-std=gnu99" "-std=c++17" cflags "${cflags}")
+    else()
+      # re-adding -std=c++11.
+      string(REGEX REPLACE "-std=gnu99" "-std=c++11" cflags "${cflags}")
+    endif()
     if (WIN32)
       set(cflags "${cflags} /EHsc")
     endif (WIN32)
